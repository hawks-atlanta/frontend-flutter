name: Release

on:
  push:
    branches: ["main"]

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.latest_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - id: latest_version
        name: Latest version
        run: python version.py >> $GITHUB_OUTPUT

  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs:
      - versioning
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.versioning.outputs.version }}
          release_name: Release ${{ needs.versioning.outputs.version }}
          draft: false
          prerelease: false

  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs:
      - create-release
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
      - name: Download dependencies
        run: flutter pub get
      - name: Create .env with server URL
        run: echo "API_URL =  ${{ secrets.API_URL }}" > .env
      - name: Build apk
        run: flutter build apk --release
      - name: Upload Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./build/app/outputs/flutter-apk/app-release.apk
          asset_name: android.apk
          asset_content_type: application/octet-stream